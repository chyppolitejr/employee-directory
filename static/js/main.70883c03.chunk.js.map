{"version":3,"sources":["components/SearchInput.js","components/Table.js","containers/Home.js","App.js","utils/API.js","reportWebVitals.js","index.js"],"names":["SearchInput","employees","updateEmployees","useState","searchTerm","setSearchTerm","useEffect","filteredEmployees","filter","name","first","toLowerCase","indexOf","className","type","value","onChange","event","target","placeholder","title","Table","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","console","log","sort","a","b","key","direction","requestSort","useSortableData","id","onClick","undefined","getClassNamesFor","map","item","src","picture","thumbnail","alt","last","email","phone","login","uuid","Home","App","empList","setEmpList","empsToDisplay","setEmpsToDisplay","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70883c03.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst SearchInput = ({ employees, updateEmployees }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredEmployees =\n      searchTerm === \"\"\n        ? employees\n        : employees.filter(\n            ({ name: { first } }) =>\n              first.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0\n          );\n\n    updateEmployees(filteredEmployees);\n  }, [searchTerm, employees]);\n\n  return (\n    <div className=\"container mb-1\">\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(event) => setSearchTerm(event.target.value)}\n        placeholder=\"filter by first name\"\n        title=\"Type in a name\"\n      ></input>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport \"../styles.css\";\n\n\n\nconst Table = ({ employees }) => {\n  // const [employeeList, setEmployeeList] = useState([]);\n\n  // Set Up sorting\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n\n    console.log(sortableItems);\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n \n\n  const { items, requestSort, sortConfig } = useSortableData(employees);\n\n\n  return (\n    <div>\n      <table className=\"table\" id=\"myTable\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th>Profile Pic</th>\n            <th>Title</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th onClick={() => requestSort(\"email\")}\n                className={getClassNamesFor(\"email\")}>\n              {/* <button\n                type=\"button\"\n                onClick={() => requestSort(\"email\")}\n                className={getClassNamesFor(\"email\")}\n              ></button> */}\n              Email Address\n            </th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.login.uuid}>\n              <td>\n                <img src={item.picture.thumbnail} alt=\"profile\"></img>\n              </td>\n              <td>{item.name.title}</td>\n              <td>{item.name.first}</td>\n              <td>{item.name.last}</td>\n              <td>{item.email}</td>\n              <td>{item.phone}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n// import Container from \"../components/Container\";\nimport TableWithData from \"../components/Table\"\nimport SearchInput from \"../components/SearchInput\"\n\nconst Home = () => {\n  return (\n    <div className=\"container mt-5\">\n        <h1 className=\"text-center\">Acme Employee Directory</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport SearchInput from \"./components/SearchInput\"\nimport Home from \"./containers/Home\";\nimport Table from \"./components/Table\"\nimport { getEmployeeList } from \"./utils/API\";\n\nfunction App() {\n  const [empList, setEmpList] = useState([]);\n  const [empsToDisplay, setEmpsToDisplay] = useState([]);\n\n  useEffect(() => {\n    getEmployeeList().then(({ data: { results } }) => setEmpList(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Home/>\n      <SearchInput employees={empList} updateEmployees={setEmpsToDisplay}/>\n      <Table employees={empsToDisplay} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\n//method that will be used for getting list of employees from random user api\nexport const getEmployeeList = () => {\n        return axios.get('https://randomuser.me/api/?results=50&nat=us');\n    }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}